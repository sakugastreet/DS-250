---
title: "Client Report - [Insert Project Title]"
subtitle: "Course DS 250"
author: "[Joseph Earl]"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
#| label: libraries
#| include: false
import pandas as pd
import numpy as np
import plotly.express as px
```


## Elevator pitch

This was a wonderful opportuninity and way for me to learn the basics of the tools I will be using this semester. 

```{python}
#| label: project-data
#| code-summary: Read and format project data

# Learn morea about Code Cells: https://quarto.org/docs/reference/cells/cells-jupyter.html

# Include and execute your code here
# df = pd.read_csv("mpg.csv")
```

__Highlight the Questions and Tasks__

## QUESTION|TASK 1

Finish the readings, setup, and be prepared with any questions to get your environment working smoothly (class for on-campus and Slack for online)

I was able to complete setting up the various environments on my laptop.

```{python}
#| label: Q1
#| code-summary: Read and format data
# Include and execute your code here


```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: Q1-chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center
# Include and execute your code here
# chart = px.bar(df.head(200),
#     x="name", 
#     y="AK"
# )
# chart.show()
```


```{python}
#| label: Q1-table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here
# mydat = (df.head(1000)
#     .groupby('year')
#     .sum()
#     .reset_index()
#     .tail(10)
#     .filter(["year", "AK","AR"])
# )
# display(mydat)

```


## QUESTION|TASK 2

In VS Code, create the example chart from section 3.2.2 of the textbook. (Note: you will be using Plotly Express to display the chart instead of Altair which is used in the book)

Here is a scatterplot, created by using Plotly Express, which is identical to the chart found in section 3.2.2 of the textbook.
The figure clearly demonstrates that vehicles with larger engines, have worse fuel effenciency.

```{python}
#| label: Q2
#| code-summary: Read and format data
# Include and execute your code here

import pandas as pd
import plotly_express as px


df = pd.read_csv("mpg.csv")
fig = px.scatter(
    df,
    x = "displ",
    y = "hwy",
    
)
fig.show()


```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: Q2-chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center

# Include and execute your code here
# chart = px.bar(df.head(200),
#     x="name", 
#     y="AK"
# )
# chart.show()

```


```{python}
#| label: Q2-table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here
# mydat = df.head(1000)\
#     .groupby('year')\
#     .sum()\
#     .reset_index()\
#     .tail(10)\
#     .filter(["year", "AK","AR"])

# display(mydat)

```


## QUESTION|TASK 3

Your final report should also include the table created from the following (assuming you have mpg from question 2)

This has been completed with the table below:

```{python}
#| label: Q3
#| code-summary: Read and format data
# Include and execute your code here
(df
  .head(5)
  .filter(["manufacturer", "model","year", "hwy"])
)


```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: Q3-chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center
# Include and execute your code here
# chart = px.bar(df.head(200),
#     x="name", 
#     y="AK"
# )
# chart.show()
```


```{python}
#| label: Q3-table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here
# mydat = df.head(1000)\
#     .groupby('year')\
#     .sum()\
#     .reset_index()\
#     .tail(10)\
#     .filter(["year", "AK","AR"])

# display(mydat)

```
